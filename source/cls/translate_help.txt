.. code-block:: text 

    usage: translate.py [-h]                        [-if {xyz,log,com,gjf,sd,sdf,mol,mol2,out,dat,fchk,pdb,pdbqt,cif,mmcif,crest,xtb,sqmout,47,31,qout}]                        [-t atoms] [-f atoms] [-ct targets] [-v x y z]                        [-d DISTANCE] [-dest x y z] [-com | -cent] [-o OUTFILE]                        [input file ...]        move atoms along a vector        positional arguments:      input file            a coordinate file        options:      -h, --help            show this help message and exit      -if {xyz,log,com,gjf,sd,sdf,mol,mol2,out,dat,fchk,pdb,pdbqt,cif,mmcif,crest,xtb,sqmout,47,31,qout}, --input-format {xyz,log,com,gjf,sd,sdf,mol,mol2,out,dat,fchk,pdb,pdbqt,cif,mmcif,crest,xtb,sqmout,47,31,qout}                            file format of input - xyz is assumed if input is stdin      -ct targets, --center-targets targets                            target atoms for -com or -cent arguments                            comma (,) and/or hyphen (-) separated list                            hyphens denote a range of atoms                            commas separate individual atoms or ranges                            default: whole structure      -d DISTANCE, --distance DISTANCE                            distance translated - only applies to --vector/-v      -o OUTFILE, --output OUTFILE                            output destination                            $INFILE will be replaced with the name of the input file                            Default: stdout        atoms to move:      -t atoms, --targets atoms                            move atoms with specified indices                            Default: whole structure      -f atoms, --fragment atoms                            move fragments containing specified atoms                            Default: whole structure        translation mode (default: move centroid to origin):      -v x y z, --vector x y z                            translate in direction of this vector                            vector is normalized when --distance/-d is used      -dest x y z, --destination x y z                            translate fragment to a point        center (default: centroid):      -com, --center-of-mass                            translate the center of mass of the targets to the destination      -cent, --centroid     translate the centroid of the targets to the destination    